import processing.serial.*;
import processing.opengl.*;
import toxi.geom.*;
import toxi.processing.*;

ToxiclibsSupport gfx;

Serial port;                         
char[] teapotPacket = new char[14];  
int serialCount = 0;                
int synced = 0;
int interval = 0;

float[] q = new float[4];
Quaternion quat = new Quaternion(1, 0, 0, 0);

float[] gravity = new float[3];
float[] euler = new float[3];
float[] ypr = new float[3];

void setup() {
    size(800, 600, OPENGL);
    gfx = new ToxiclibsSupport(this);
    lights();
    smooth();
    colorMode(RGB, 1);
    println(Serial.list());
    String portName = "COM3";
    port = new Serial(this, portName, 115200);
    port.write('r');
}

void draw() {
    if (millis() - interval > 1000) {
        port.write('r');
        interval = millis();
    }
    background(0);
    pushMatrix();
    translate(width / 2, height / 2);
    float[] axis = quat.toAxisAngle();
    rotate(axis[0], -axis[1], axis[3], axis[2]);

    
  beginShape(QUADS);
 //bela
  fill(1, 1, 1); vertex(-50,  50,  50);
  fill(1, 1, 1); vertex( 50,  50,  50);
  fill(1, 1, 1); vertex( 50, -50,  50);
  fill(1, 1, 1); vertex(-50, -50,  50);
  
//rdeča
  fill(1, 0, 0); vertex( 50,  50,  50);
  fill(1, 0, 0); vertex( 50,  50, -50);
  fill(1, 0, 0); vertex( 50, -50, -50);
  fill(1, 0, 0); vertex( 50, -50,  50);

//modra
  fill(0, 1, 0); vertex( 50,  50, -50);
  fill(0, 1, 0); vertex(-50,  50, -50);
  fill(0, 1, 0); vertex(-50, -50, -50);
  fill(0, 1, 0); vertex( 50, -50, -50);

//zelena
  fill(0, 0, 1); vertex(-50,  50, -50);
  fill(0, 0, 1); vertex(-50,  50,  50);
  fill(0, 0, 1); vertex(-50, -50,  50);
  fill(0, 0, 1); vertex(-50, -50, -50);

//turkizna
  fill(0, 1, 1); vertex(-50,  50, -50);
  fill(0, 1, 1); vertex( 50,  50, -50);
  fill(0, 1, 1); vertex( 50,  50,  50);
  fill(0, 1, 1); vertex(-50,  50,  50);

//siva
  fill(0.5, 0.5, 0.5); vertex(-50, -50, -50);
  fill(0.5, 0.5, 0.5); vertex( 50, -50, -50);
  fill(0.5, 0.5, 0.5); vertex( 50, -50,  50);
  fill(0.5, 0.5, 0.5); vertex(-50, -50,  50);

  endShape();
    
    popMatrix();

  
 
}

void serialEvent(Serial port) {
    interval = millis();
    while (port.available() > 0) {
        int ch = port.read();
       if (serialCount > 0 || ch == '$') {
            teapotPacket[serialCount++] = (char)ch;
            if (serialCount == 14) {
                serialCount = 0;
                               
                q[0] = ((teapotPacket[2] << 8) | teapotPacket[3]) / 16384.0f;
                q[1] = ((teapotPacket[4] << 8) | teapotPacket[5]) / 16384.0f;
                q[2] = ((teapotPacket[6] << 8) | teapotPacket[7]) / 16384.0f;
                q[3] = ((teapotPacket[8] << 8) | teapotPacket[9]) / 16384.0f;
                for (int i = 0; i < 4; i++) if (q[i] >= 2) q[i] = -4 + q[i];   
                quat.set(q[0], q[1], q[2], q[3]); 
            }
        }
    }
}
